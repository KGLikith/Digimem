// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Permission {
  read
  edit
  delete
}

model User {
  id           String  @id @default(cuid())
  email        String  @unique
  profileImage String?
  FirstName    String
  LastName     String?

  memories       Memory[]
  SharedMemories SharedWithUser[]
  Albums Albums[]

  settings Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Albums{
  id String @id @default(cuid())
  title String @unique
  userId String
  user User @relation(fields: [userId], references: [id])
}

model Memory {
  id          String    @id @default(cuid())
  title       String
  description String?
  mediaUrl    String // URL to image, video, or document
  mediaType   String // e.g., "image", "video", "audio"
  tags        Tag[]
  date        DateTime?
  userId      String
  user        User      @relation(fields: [userId], references: [id])

  sharedWith   SharedMemory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SharedMemory {
  id         String           @id @default(cuid())
  memoryId   String
  Memory     Memory           @relation(fields: [memoryId], references: [id])
  sharedWith SharedWithUser[]

  createdAt DateTime @default(now())

  @@index([memoryId])
}

model SharedWithUser {
  id             String       @id @default(cuid())
  sharedMemoryId String
  sharedMemory   SharedMemory @relation(fields: [sharedMemoryId], references: [id])
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  permissions    Permission[] @default([read])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([sharedMemoryId])
  @@index([userId])
}

model Tag {
  id       String   @id @default(cuid())
  name     String   @unique
  memories Memory[]
}
